name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Lint, Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run tests with coverage
        run: |
          mkdir -p .testresults
          go test ./... -coverpkg=./core,./authorize -coverprofile=.testresults/coverage.out -v

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: .testresults/coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: Enforce coverage threshold
        run: |
          total=$(go tool cover -func=.testresults/coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          threshold=80.0
          echo "Total coverage: $total%"
          awk -v total=$total -v threshold=$threshold 'BEGIN {exit (total+0 < threshold)}'

          - name: Run performance benchmarks
          run: |
            mkdir -p .benchmark
            go test -bench=. -benchmem ./benchmark > .benchmark/results.txt

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: .benchmark/results.txt

      - name: Run CPU profile benchmark
        run: |
            mkdir -p .pprof
            go test -bench=ValidateMessage -cpuprofile=.pprof/cpu.prof ./benchmark

      - name: Run memory profile benchmark
        run: go test -bench=. -memprofile=.pprof/mem.prof ./benchmark

      - name: Upload pprof profiles
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-profiles
          path: .pprof

  release:
    name: Create GitHub Release
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
