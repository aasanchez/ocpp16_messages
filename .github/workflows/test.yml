name: Test and Release

on:
  push:
    branches:
      - main    # Trigger on every commit to main
    tags:
      - 'v*'    # Trigger on tags like v1.0.0, v0.1.2, etc.

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0

  test:
    name: Run Tests and Collect Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Tests with Coverage
        run: go test -v -coverprofile=coverage.out ./...

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out
        if: always()

      - name: Run tests and generate JUnit report
        run: |
          mkdir -p test-results
          go test -v ./... 2>&1 | go-junit-report > test-results/junit.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/
        if: always()

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out

  e2e:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24 # Specify the version of Go to use

      # Run all .go files in _example directory recursively
      - name: Run all Go files in _example directory
        run: |
          find ./_example -type f -name "*.go" | while read file; do
            echo "Running file: $file"
            go run "$file"
          done
